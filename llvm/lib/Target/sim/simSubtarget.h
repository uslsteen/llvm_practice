#ifndef __LLVM_LIB_TARGET_SIM_SIMSUBTARGET_H__
#define __LLVM_LIB_TARGET_SIM_SIMSUBTARGET_H__

#include "MCTargetDesc/simInfo.h"
#include "simFrameLowering.h"
#include "simISelLowering.h"
#include "simInstrInfo.h"
#include "llvm/CodeGen/SelectionDAGTargetInfo.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"
#include <string>

#define GET_SUBTARGETINFO_HEADER
#include "simGenSubtargetInfo.inc"

namespace llvm {

class StringRef;
class TargetMachine;

class simSubtarget : public simGenSubtargetInfo {
  virtual void anchor();

  simRegisterInfo RegInfo;
  simInstrInfo InstrInfo;
  simFrameLowering FrameLowering;
  simTargetLowering TLInfo;
  SelectionDAGTargetInfo TSInfo;
  simABI::ABI TargetABI = simABI::ABI_ILP32;
  MVT XLenVT = MVT::i32;
  unsigned XLen = 32;

public:
  simSubtarget(const Triple &TT, const std::string &CPU, const std::string &FS,
                const TargetMachine &TM);

  /// Definition of function is auto generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef TuneCPU, StringRef FS);

  const simInstrInfo *getInstrInfo() const override { return &InstrInfo; }
  const simFrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
  const simTargetLowering *getTargetLowering() const override {
    return &TLInfo;
  }
  const simRegisterInfo *getRegisterInfo() const override { return &RegInfo; }
  const SelectionDAGTargetInfo *getSelectionDAGInfo() const override {
    return &TSInfo;
  }

  auto getTargetABI() const { return TargetABI; }
  auto getXLenVT() const { return XLenVT; }
  auto getXLen() const { return XLen; }
};

} // end namespace llvm

#endif // __LLVM_LIB_TARGET_SIM_SIMSUBTARGET_H__
